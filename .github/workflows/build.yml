name: Build MinGW-mmCEsim

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Windows
            os: windows-latest
            architecture: x86_64
            url_mingw: https://github.com/niXman/mingw-builds-binaries/releases/download/12.2.0-rt_v10-rev0/x86_64-12.2.0-release-win32-sjlj-rt_v10-rev0.7z
            url_armadillo: https://sourceforge.net/projects/arma/files/armadillo-11.4.2.tar.xz
            url_openblas: https://github.com/xianyi/OpenBLAS/releases/download/v0.3.20/OpenBLAS-0.3.20-x64.zip
            artifact: MinGW-mmCEsim-Windows.zip

    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: recursive

    - name: Download
      shell: bash
      run: |
        curl -kLSs ${{ matrix.config.url_mingw }} -o mingw.7z
        7z x mingw.7z
        curl -kLSs ${{ matrix.config.url_armadillo }} -o armadillo-11.4.2.tar.xz
        7z x armadillo-11.4.2.tar.xz
        7z x armadillo-11.4.2.tar
        mv armadillo-11.4.2 armadillo
        curl -kLSs ${{ matrix.config.url_openblas }} -o openblas.zip
        7z x openblas.zip -o./openblas
    - name: Set Armadillo
      run: ./set_armadillo.ps1
    - name: Set OpenBLAS
      run: ./set_openblas.ps1
    - name: Test
      run: |
        cd armadillo/examples
        Copy-Item -Path ${{ github.workspace }}/mingw64/dll/libopenblas.dll -Destination ./libopenblas.dll
        ${{ github.workspace }}/mingw64/bin/g++ -c -std=c++17 -static ./example1.cpp
        ${{ github.workspace }}/mingw64/bin/g++ -static ./example1.o ./libopenblas.dll -otest
        ./test
    - name: Pack
      run: 7z a -tzip ${{ matrix.config.artifact }} mingw64

    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        path: ./${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: MinGW-mmCEsim ${{ github.ref }}
        body: Automatic build for MinGW-mmCEsim.
        draft: false
        prerelease: false

    - name: Store Release url
      run: |
        echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url
    - uses: actions/upload-artifact@v1
      with:
        path: ./upload_url
        name: upload_url

  publish:
    if: contains(github.ref, 'tags/v')
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Windows
            os: windows-latest
            architecture: x86_64
            artifact: MinGW-mmCEsim-Windows.zip
    needs: release

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: ${{ matrix.config.artifact }}
        path: ./

    - name: Download URL
      uses: actions/download-artifact@v1
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      shell: bash
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url
    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: ./${{ matrix.config.artifact }}
        asset_name: ${{ matrix.config.artifact }}
        asset_content_type: application/x-gtar
